% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Call.R
\name{Call}
\alias{Call}
\title{\code{data.table} call.}
\description{
Friend class of the \code{DataFrame} (has access to the private environment).
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Call-new}{\code{Call$new()}}
\item \href{#method-Call-print}{\code{Call$print()}}
\item \href{#method-Call-use}{\code{Call$use()}}
\item \href{#method-Call-set}{\code{Call$set()}}
\item \href{#method-Call-get}{\code{Call$get()}}
\item \href{#method-Call-eval}{\code{Call$eval()}}
\item \href{#method-Call-arg}{\code{Call$arg()}}
\item \href{#method-Call-subset}{\code{Call$subset()}}
\item \href{#method-Call-grouping}{\code{Call$grouping()}}
\item \href{#method-Call-reverse_on}{\code{Call$reverse_on()}}
\item \href{#method-Call-clone}{\code{Call$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Call-new"></a>}}
\if{latex}{\out{\hypertarget{method-Call-new}{}}}
\subsection{Method \code{new()}}{
Constructor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Call$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Call-print"></a>}}
\if{latex}{\out{\hypertarget{method-Call-print}{}}}
\subsection{Method \code{print()}}{
Print method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Call$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Call-use"></a>}}
\if{latex}{\out{\hypertarget{method-Call-use}{}}}
\subsection{Method \code{use()}}{
Use DataFrame for the call.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Call$use(df)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{df}}{The private part of a DataFrame.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Call-set"></a>}}
\if{latex}{\out{\hypertarget{method-Call-set}{}}}
\subsection{Method \code{set()}}{
Set or remove arguments to call.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Call$set(..., env = parent.frame(2L))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Named language objects.}

\item{\code{env}}{The environment used to set the arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Call-get"></a>}}
\if{latex}{\out{\hypertarget{method-Call-get}{}}}
\subsection{Method \code{get()}}{
Get the call expression.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Call$get()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Call-eval"></a>}}
\if{latex}{\out{\hypertarget{method-Call-eval}{}}}
\subsection{Method \code{eval()}}{
Evaluate the call.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Call$eval(env = parent.frame(2L))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{env}}{The environment in which to evaluate.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Call-arg"></a>}}
\if{latex}{\out{\hypertarget{method-Call-arg}{}}}
\subsection{Method \code{arg()}}{
Get a specific argument.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Call$arg(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Name of the argument to get.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Call-subset"></a>}}
\if{latex}{\out{\hypertarget{method-Call-subset}{}}}
\subsection{Method \code{subset()}}{
Subset the call.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Call$subset(args)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{args}}{Character vector of arguments to keep.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Call-grouping"></a>}}
\if{latex}{\out{\hypertarget{method-Call-grouping}{}}}
\subsection{Method \code{grouping()}}{
Get the used grouping.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Call$grouping()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Call-reverse_on"></a>}}
\if{latex}{\out{\hypertarget{method-Call-reverse_on}{}}}
\subsection{Method \code{reverse_on()}}{
Reverse the on expression.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Call$reverse_on()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Call-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Call-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Call$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
