% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Constant.R, R/sugar.R
\name{Constant}
\alias{Constant}
\alias{Const}
\title{Constant Object Class}
\usage{
Const()
}
\value{
A \code{Constant} object.
}
\description{
Objects of this class are holders of constant values.
Constants defined inside a \code{Constant} object can not be modified.
The values are stored inside a \code{list} object. They should be accessed with the \verb{$get} method.
See examples for a simple use case.
}
\section{Functions}{
\itemize{
\item \code{Const()}: Constant$new() constructor sugar

}}
\examples{
CONST <- Const() # or Constant$new()
CONST$define("x", 3)
CONST$get$x

CONST$define("y", c("a", "b"))
CONST$define("y", 2) # Error

}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{get}}{Access the defined constants.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Constant-define}{\code{Constant$define()}}
\item \href{#method-Constant-print}{\code{Constant$print()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Constant-define"></a>}}
\if{latex}{\out{\hypertarget{method-Constant-define}{}}}
\subsection{Method \code{define()}}{
Define a new constant.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Constant$define(name, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Character Name of the constant.}

\item{\code{value}}{Value assigned to the constant.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Nothing.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Constant-print"></a>}}
\if{latex}{\out{\hypertarget{method-Constant-print}{}}}
\subsection{Method \code{print()}}{
Print function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Constant$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Nothing.
}
}
}
